server:
  port: 8928

spring:
  datasource:
    drive-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://self.ali:3306/treasure_life?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
    username: treasure_user
    password: 111111
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format-sql: true
    show-sql: true
# hibernate.hbm2ddl.auto 参数的作用主要用于：自动创建、更新、验证数据库表结构，有四个值。
#  create：每次加载 Hibernate 时都会删除上一次生成的表，然后根据 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#  create-drop：每次加载 Hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭，表就自动删除。
#  update：最常用的属性，第一次加载 Hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载 Hibernate 时根据 model 类自动更新表结构，即使表结构改变了，但表中的行仍然存在，不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#  validate ：每次加载 Hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
# dialect 主要是指定生成表名的存储引擎为 InnoDB
# show-sql 是否在日志中打印出自动生成的 SQL，方便调试的时候查看

lx:
  # 机器id分配，用于计算数据库中数据的id
  # 城市代码/机房代码/机架代码/机器代码/时间戳位数/并发数 -- 3/4/5/3/41/8
  # 为了保证id的各个组成部分都是可以随时调整的下面参数如下。
  machine-id:
    fixedTime: "2000-01-01"
    cityNum: 7
    machineRoomNum: 15
    machineFrameNum: 31
    machineNum: 7
    # 城市代码的位数
    cityNumPlaces: 3
    # 机房代码位数
    machineRoomNumPlaces: 4
    # 机架代码的位数
    machineFrameNumPlaces: 5
    # 机器代码的位数
    machineNumPlaces: 3
    # 生成的时间戳的位数
    timeMillsPlaces: 41
    # 并发的位数
    concurrencePlaces: 8
